{"ast":null,"code":"var _jsxFileName = \"/Users/charleslucas/Documents/2207-Bootcamp/Demos/PokemonDemo/src/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SinglePokemon from \"./SinglePokemon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  // state allows us to manage data that is changing in our react app\n  // we are retriving data from our backend/server so we want to our initial value of our\n  // state to be an empty array, we will store items fetch into our array\n  const [pokemon, setPokemon] = useState([]);\n  /* \n  How to write a the useEffect hook \n  1. import the useEffect hook from react \n  2. useEffect takes in a few arguments\n     --> first one is a function\n     --> second one is optional, and this changes the behavior in how useEffect is used\n  3. The second argument is a dependency list  \n  */\n  // On every render --> if we don't include a second arguement this useEffect will run on every new render/load\n\n  useEffect(() => {\n    console.log(\"I re-rerended\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Pokemon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Pokemon, \"4D0jkhGq0ZINAQVoOiMhL4+r3a8=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"names":["React","useState","SinglePokemon","Pokemon","pokemon","setPokemon","useEffect","console","log"],"sources":["/Users/charleslucas/Documents/2207-Bootcamp/Demos/PokemonDemo/src/Pokemon.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport SinglePokemon from \"./SinglePokemon\";\n\nconst Pokemon = () => {\n  // state allows us to manage data that is changing in our react app\n  // we are retriving data from our backend/server so we want to our initial value of our\n  // state to be an empty array, we will store items fetch into our array\n  const [pokemon, setPokemon] = useState([]);\n\n  /* \n  How to write a the useEffect hook \n  1. import the useEffect hook from react \n  2. useEffect takes in a few arguments\n     --> first one is a function\n     --> second one is optional, and this changes the behavior in how useEffect is used\n  3. The second argument is a dependency list  \n  */\n\n  // On every render --> if we don't include a second arguement this useEffect will run on every new render/load\n  useEffect(() => {\n    console.log(\"I re-rerended\");\n  });\n\n  return <div>Pokemon</div>;\n};\n\nexport default Pokemon;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB;EACA;EACA;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAEE;;EACAK,SAAS,CAAC,MAAM;IACdC,OAAO,CAACC,GAAR,CAAY,eAAZ;EACD,CAFQ,CAAT;EAIA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CArBD;;GAAML,O;;KAAAA,O;AAuBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}